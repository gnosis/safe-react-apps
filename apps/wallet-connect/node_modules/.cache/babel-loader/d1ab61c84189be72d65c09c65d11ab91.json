{"ast":null,"code":"// Type for gs_multi_send transaction, taken from https://github.com/gnosis/contract-proxy-kit/blob/master/src/utils/transactions.ts#L31\nfunction isDecimalString(value) {\n  return !value.match(/^[0-9]*$/);\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isNumberLike(object) {\n  if (typeof object === 'string' && !isHexString(object) && !isDecimalString(object)) return false;\n  return typeof object in ['number', 'string', 'bigint'];\n}\n\nexport function isMetaTx(object) {\n  if (typeof object.to !== 'string') return false;\n  if (object.value && isNumberLike(object.value)) return false;\n  if (object.data && !isHexString(object.data)) return false; // Make sure that operation is not set to avoid unexpected behaviour\n\n  if (typeof object.operation !== 'undefined') return false;\n  return true;\n}\nexport function isMetaTxArray(object) {\n  if (!Array.isArray(object)) return false;\n\n  for (let tx of object) {\n    if (!isMetaTx(tx)) return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/mdastugu/Projects/safe-react-apps/apps/wallet-connect/src/utils/transactions.ts"],"names":["isDecimalString","value","match","isHexString","length","isNumberLike","object","isMetaTx","to","data","operation","isMetaTxArray","Array","isArray","tx"],"mappings":"AAAA;AASA,SAASA,eAAT,CAAyBC,KAAzB,EAAiD;AAC/C,SAAO,CAACA,KAAK,CAACC,KAAN,CAAY,UAAZ,CAAR;AACD;;AAED,SAASC,WAAT,CAAqBF,KAArB,EAAoCG,MAApC,EAAqD;AACnD,MAAI,OAAOH,KAAP,KAAiB,QAAjB,IAA6B,CAACA,KAAK,CAACC,KAAN,CAAY,kBAAZ,CAAlC,EAAmE;AACjE,WAAO,KAAP;AACD;;AAED,MAAIE,MAAM,IAAIH,KAAK,CAACG,MAAN,KAAiB,IAAI,IAAIA,MAAvC,EAA+C;AAC7C,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAED,SAASC,YAAT,CAAsBC,MAAtB,EAAqD;AACnD,MAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAACH,WAAW,CAACG,MAAD,CAA1C,IAAsD,CAACN,eAAe,CAACM,MAAD,CAA1E,EAAoF,OAAO,KAAP;AACpF,SAAO,OAAOA,MAAP,IAAiB,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAxB;AACD;;AAED,OAAO,SAASC,QAAT,CAAkBD,MAAlB,EAAiD;AACtD,MAAI,OAAOA,MAAM,CAACE,EAAd,KAAqB,QAAzB,EAAmC,OAAO,KAAP;AACnC,MAAIF,MAAM,CAACL,KAAP,IAAgBI,YAAY,CAACC,MAAM,CAACL,KAAR,CAAhC,EAAgD,OAAO,KAAP;AAChD,MAAIK,MAAM,CAACG,IAAP,IAAe,CAACN,WAAW,CAACG,MAAM,CAACG,IAAR,CAA/B,EAA8C,OAAO,KAAP,CAHQ,CAItD;;AACA,MAAI,OAAOH,MAAM,CAACI,SAAd,KAA4B,WAAhC,EAA6C,OAAO,KAAP;AAC7C,SAAO,IAAP;AACD;AAED,OAAO,SAASC,aAAT,CAAuBL,MAAvB,EAAwD;AAC7D,MAAI,CAACM,KAAK,CAACC,OAAN,CAAcP,MAAd,CAAL,EAA4B,OAAO,KAAP;;AAC5B,OAAK,IAAIQ,EAAT,IAAeR,MAAf,EAAuB;AACrB,QAAI,CAACC,QAAQ,CAACO,EAAD,CAAb,EAAmB,OAAO,KAAP;AACpB;;AACD,SAAO,IAAP;AACD","sourcesContent":["// Type for gs_multi_send transaction, taken from https://github.com/gnosis/contract-proxy-kit/blob/master/src/utils/transactions.ts#L31\nexport type NumberLike = number | string | bigint;\n\nexport interface MetaTx {\n  to: string;\n  value?: NumberLike;\n  data?: string;\n}\n\nfunction isDecimalString(value: string): boolean {\n  return !value.match(/^[0-9]*$/);\n}\n\nfunction isHexString(value: string, length?: number) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isNumberLike(object: any): object is MetaTx {\n  if (typeof object === 'string' && !isHexString(object) && !isDecimalString(object)) return false;\n  return typeof object in ['number', 'string', 'bigint'];\n}\n\nexport function isMetaTx(object: any): object is MetaTx {\n  if (typeof object.to !== 'string') return false;\n  if (object.value && isNumberLike(object.value)) return false;\n  if (object.data && !isHexString(object.data)) return false;\n  // Make sure that operation is not set to avoid unexpected behaviour\n  if (typeof object.operation !== 'undefined') return false;\n  return true;\n}\n\nexport function isMetaTxArray(object: any): object is MetaTx[] {\n  if (!Array.isArray(object)) return false;\n  for (let tx of object) {\n    if (!isMetaTx(tx)) return false;\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}