{"ast":null,"code":"var _jsxFileName = \"/Users/mdastugu/Projects/safe-react-apps/apps/tx-builder/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Text, Title, TextField, GenericModal, Select, ModalFooterConfirmation, ButtonLink, Link } from '@gnosis.pm/safe-react-components';\nimport React, { useState, useCallback } from 'react';\nimport { useSafeAppsSDK } from '@gnosis.pm/safe-apps-react-sdk';\nimport Box from '@material-ui/core/Box';\nimport styled from 'styled-components';\nimport useServices from '../hooks/useServices';\nimport WidgetWrapper from './WidgetWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n`;\n_c = ButtonContainer;\nconst StyledSelect = styled(Select)`\n  width: 400px;\n`;\n_c2 = StyledSelect;\nconst StyledTitle = styled(Title)`\n  margin-top: 0px;\n  margin-bottom: 5px;\n`;\n_c3 = StyledTitle;\nconst StyledText = styled(Text)`\n  margin-bottom: 15px;\n`;\n_c4 = StyledText;\nconst StyledExamples = styled.div`\n  button {\n    padding: 0;\n  }\n`;\n_c5 = StyledExamples;\n\nconst ModalBody = ({\n  txs,\n  deleteTx\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: txs.map((tx, index) => /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row-reverse\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"md\",\n        variant: \"outlined\",\n        iconType: \"delete\",\n        color: \"error\",\n        onClick: () => deleteTx(index),\n        children: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"lg\",\n        children: tx.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c6 = ModalBody;\n\nconst Dashboard = () => {\n  _s();\n\n  var _getContractMethod;\n\n  const {\n    sdk,\n    safe\n  } = useSafeAppsSDK();\n  const services = useServices(safe.network);\n  const [addressOrAbi, setAddressOrAbi] = useState('');\n  const [loadAbiError, setLoadAbiError] = useState(false);\n  const [showExamples, setShowExamples] = useState(false);\n  const [toAddress, setToAddress] = useState('');\n  const [contract, setContract] = useState(undefined);\n  const [reviewing, setReviewing] = useState(false);\n  const [selectedMethodIndex, setSelectedMethodIndex] = useState(0);\n  const [inputCache, setInputCache] = useState([]);\n  const [addTxError, setAddTxError] = useState();\n  const [transactions, setTransactions] = useState([]);\n  const [value, setValue] = useState('');\n\n  const handleAddressOrABI = async e => {\n    var _e$currentTarget, _e$currentTarget$valu;\n\n    setContract(undefined);\n    setLoadAbiError(false);\n    const cleanInput = (_e$currentTarget = e.currentTarget) === null || _e$currentTarget === void 0 ? void 0 : (_e$currentTarget$valu = _e$currentTarget.value) === null || _e$currentTarget$valu === void 0 ? void 0 : _e$currentTarget$valu.trim();\n    setAddressOrAbi(cleanInput);\n\n    if (!cleanInput.length || !services.web3 || !services.interfaceRepo) {\n      return;\n    }\n\n    if (toAddress.length === 0 && services.web3.utils.isAddress(cleanInput)) {\n      setToAddress(cleanInput);\n    }\n\n    try {\n      const contract = await services.interfaceRepo.loadAbi(cleanInput);\n      setContract(contract);\n    } catch (e) {\n      setLoadAbiError(true);\n      console.error(e);\n    }\n  };\n\n  const handleMethod = useCallback(async methodIndex => {\n    if (!contract || contract.methods.length <= methodIndex) return;\n    setSelectedMethodIndex(methodIndex);\n  }, [contract]);\n  const handleInput = useCallback(async (inputIndex, input) => {\n    inputCache[inputIndex] = input;\n    setInputCache(inputCache.slice());\n  }, [inputCache]);\n\n  const getContractMethod = () => contract === null || contract === void 0 ? void 0 : contract.methods[selectedMethodIndex];\n\n  const isValueInputVisible = () => {\n    const method = getContractMethod();\n    return method === null || method === void 0 ? void 0 : method.payable;\n  };\n\n  const addTransaction = useCallback(async () => {\n    let description = '';\n    let data = '';\n    const web3 = services.web3;\n\n    if (!web3) {\n      return;\n    }\n\n    if (contract && contract.methods.length > selectedMethodIndex) {\n      const method = contract.methods[selectedMethodIndex];\n      const cleanInputs = [];\n      description = method.name + ' (';\n\n      for (let i = 0; i < method.inputs.length; i++) {\n        const cleanValue = inputCache[i] || '';\n        cleanInputs[i] = cleanValue.charAt(0) === '[' ? JSON.parse(cleanValue.replace(/\"/g, '\"')) : cleanValue;\n\n        if (i > 0) {\n          description += ', ';\n        }\n\n        const input = method.inputs[i];\n        description += (input.name || input.type) + ': ' + cleanValue;\n      }\n\n      description += ')';\n\n      try {\n        data = web3.eth.abi.encodeFunctionCall(method, cleanInputs);\n      } catch (error) {\n        setAddTxError(error.message);\n        return;\n      }\n    }\n\n    try {\n      const cleanTo = web3.utils.toChecksumAddress(toAddress);\n      const cleanValue = value.length > 0 ? web3.utils.toWei(value) : 0;\n\n      if (data.length === 0) {\n        data = '0x';\n      }\n\n      if (description.length === 0) {\n        description = `Transfer ${cleanValue} ETH to ${cleanTo}`;\n      }\n\n      transactions.push({\n        description,\n        raw: {\n          to: cleanTo,\n          value: cleanValue,\n          data\n        }\n      });\n      setInputCache([]);\n      setTransactions(transactions);\n      setSelectedMethodIndex(0);\n      setValue('');\n    } catch (e) {\n      console.error(e);\n    }\n  }, [services, transactions, toAddress, value, contract, selectedMethodIndex, inputCache]);\n  const deleteTransaction = useCallback(async inputIndex => {\n    const newTxs = transactions.slice();\n    newTxs.splice(inputIndex, 1);\n    setTransactions(newTxs);\n  }, [transactions]);\n  const sendTransactions = useCallback(async () => {\n    if (!transactions.length) {\n      return;\n    }\n\n    try {\n      sdk.txs.send({\n        txs: transactions.map(d => d.raw)\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [sdk, transactions]);\n\n  const handleSubmit = () => {\n    sendTransactions();\n    setTransactions([]);\n    setReviewing(false);\n  };\n\n  const handleDismiss = () => {\n    setReviewing(false);\n  };\n\n  const getInputInterface = input => {\n    // This code renders a helper for the input text.\n    // When the parameter is of Tuple type, it renders an array with the parameters types\n    // required to form the Tuple, if not, it renders the parameter type directly.\n    if (input.type.startsWith('tuple')) {\n      return `tuple(${input.components.map(c => c.internalType).toString()})${input.type.endsWith('[]') ? '[]' : ''}`;\n    } else {\n      return input.type;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(WidgetWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n      size: \"sm\",\n      children: \"Multisend transaction builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledText, {\n      size: \"sm\",\n      children: [\"This app allows you to build a custom multisend transaction.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), \"Enter a Ethereum contract address or ABI to get started.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"https://help.gnosis-safe.io/en/articles/4680071-create-a-batched-transaction-with-the-transaction-builder-safe-app\",\n        size: \"lg\",\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: \"Learn how to use the transaction builder.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), reviewing && transactions.length > 0 && /*#__PURE__*/_jsxDEV(GenericModal, {\n      body: /*#__PURE__*/_jsxDEV(ModalBody, {\n        txs: transactions,\n        deleteTx: deleteTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this),\n      onClose: handleDismiss,\n      title: \"Send Transactions\",\n      footer: /*#__PURE__*/_jsxDEV(ModalFooterConfirmation, {\n        handleOk: handleSubmit,\n        handleCancel: handleDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: addressOrAbi,\n      label: \"Enter Contract Address or ABI\",\n      onChange: handleAddressOrABI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), loadAbiError && /*#__PURE__*/_jsxDEV(Text, {\n      color: \"error\",\n      size: \"lg\",\n      children: \"There was a problem trying to load the ABI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), contract && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        size: \"xs\",\n        children: \"Transaction information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), !(contract === null || contract === void 0 ? void 0 : contract.methods.length) && /*#__PURE__*/_jsxDEV(Text, {\n        size: \"lg\",\n        children: \"Contract ABI doesn't have any public methods.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 41\n      }, this), (isValueInputVisible() || contract.methods.length > 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginTop: 10\n          },\n          value: toAddress,\n          label: \"To Address\",\n          onChange: e => setToAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), isValueInputVisible() && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginTop: 10,\n            marginBottom: 10\n          },\n          value: value,\n          label: \"ETH\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [contract.methods.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            items: contract.methods.map((method, index) => ({\n              id: index.toString(),\n              label: method.name\n            })),\n            activeItemId: selectedMethodIndex.toString(),\n            onItemClick: id => {\n              setAddTxError(undefined);\n              handleMethod(Number(id));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(StyledExamples, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonLink, {\n              color: \"primary\",\n              onClick: () => setShowExamples(prev => !prev),\n              children: showExamples ? 'Hide Examples' : 'Show Examples'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this), showExamples && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                size: \"sm\",\n                strong: true,\n                children: [\"string \", '> ', /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"sm\",\n                  as: \"span\",\n                  children: \"some value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                size: \"sm\",\n                strong: true,\n                children: [\"uint256 \", '> ', /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"sm\",\n                  as: \"span\",\n                  children: \"123\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                size: \"sm\",\n                strong: true,\n                children: [\"address \", '> ', /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"sm\",\n                  as: \"span\",\n                  children: \"0xDe75665F3BE46D696e5579628fA17b662e6fC04e\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                size: \"sm\",\n                strong: true,\n                children: [\"array \", '> ', /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"sm\",\n                  as: \"span\",\n                  children: \"[1,2,3]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                size: \"sm\",\n                strong: true,\n                children: [\"Tuple(uint256, string) \", '> ', /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"sm\",\n                  as: \"span\",\n                  children: \"[1, \\\"someValue\\\"]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                size: \"sm\",\n                strong: true,\n                children: [\"Tuple(uint256, string)[] \", '> ', /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"sm\",\n                  as: \"span\",\n                  children: \"[[1, \\\"someValue\\\"], [2, \\\"someOtherValue\\\"]]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), (_getContractMethod = getContractMethod()) === null || _getContractMethod === void 0 ? void 0 : _getContractMethod.inputs.map((input, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                marginTop: 10\n              },\n              value: inputCache[index] || '',\n              label: `${input.name || ''}(${getInputInterface(input)})`,\n              onChange: e => {\n                setAddTxError(undefined);\n                handleInput(index, e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 19\n          }, this);\n        }), addTxError && /*#__PURE__*/_jsxDEV(Text, {\n          size: \"lg\",\n          color: \"error\",\n          children: addTxError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [isValueInputVisible() || contract.methods.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          size: \"md\",\n          color: \"primary\",\n          onClick: () => addTransaction(),\n          children: \"Add transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"md\",\n          disabled: !transactions.length,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setReviewing(true),\n          children: `Send Transactions ${transactions.length ? `(${transactions.length})` : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"VCsj8WRS2G0yXJUlmHwC6zdQZhs=\", false, function () {\n  return [useSafeAppsSDK, useServices];\n});\n\n_c7 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"StyledSelect\");\n$RefreshReg$(_c3, \"StyledTitle\");\n$RefreshReg$(_c4, \"StyledText\");\n$RefreshReg$(_c5, \"StyledExamples\");\n$RefreshReg$(_c6, \"ModalBody\");\n$RefreshReg$(_c7, \"Dashboard\");","map":{"version":3,"sources":["/Users/mdastugu/Projects/safe-react-apps/apps/tx-builder/src/components/Dashboard.tsx"],"names":["Button","Text","Title","TextField","GenericModal","Select","ModalFooterConfirmation","ButtonLink","Link","React","useState","useCallback","useSafeAppsSDK","Box","styled","useServices","WidgetWrapper","ButtonContainer","div","StyledSelect","StyledTitle","StyledText","StyledExamples","ModalBody","txs","deleteTx","map","tx","index","description","Dashboard","sdk","safe","services","network","addressOrAbi","setAddressOrAbi","loadAbiError","setLoadAbiError","showExamples","setShowExamples","toAddress","setToAddress","contract","setContract","undefined","reviewing","setReviewing","selectedMethodIndex","setSelectedMethodIndex","inputCache","setInputCache","addTxError","setAddTxError","transactions","setTransactions","value","setValue","handleAddressOrABI","e","cleanInput","currentTarget","trim","length","web3","interfaceRepo","utils","isAddress","loadAbi","console","error","handleMethod","methodIndex","methods","handleInput","inputIndex","input","slice","getContractMethod","isValueInputVisible","method","payable","addTransaction","data","cleanInputs","name","i","inputs","cleanValue","charAt","JSON","parse","replace","type","eth","abi","encodeFunctionCall","message","cleanTo","toChecksumAddress","toWei","push","raw","to","deleteTransaction","newTxs","splice","sendTransactions","send","d","handleSubmit","handleDismiss","getInputInterface","startsWith","components","c","internalType","toString","endsWith","marginTop","target","marginBottom","id","label","Number","prev"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Text,\n  Title,\n  TextField,\n  GenericModal,\n  Select,\n  ModalFooterConfirmation,\n  ButtonLink,\n  Link,\n} from '@gnosis.pm/safe-react-components';\nimport React, { useState, useCallback } from 'react';\nimport { useSafeAppsSDK } from '@gnosis.pm/safe-apps-react-sdk';\nimport Box from '@material-ui/core/Box';\nimport styled from 'styled-components';\nimport { AbiItem } from 'web3-utils';\n\nimport { ContractInterface } from '../hooks/useServices/interfaceRepository';\nimport useServices from '../hooks/useServices';\nimport { ProposedTransaction } from '../typings/models';\nimport WidgetWrapper from './WidgetWrapper';\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 400px;\n`;\n\nconst StyledTitle = styled(Title)`\n  margin-top: 0px;\n  margin-bottom: 5px;\n`;\n\nconst StyledText = styled(Text)`\n  margin-bottom: 15px;\n`;\n\nconst StyledExamples = styled.div`\n  button {\n    padding: 0;\n  }\n`;\n\nconst ModalBody = ({ txs, deleteTx }: { txs: Array<ProposedTransaction>; deleteTx: (index: number) => void }) => {\n  return (\n    <>\n      {txs.map((tx, index) => (\n        <Box\n          key={index}\n          display=\"flex\"\n          flexDirection=\"row-reverse\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          width=\"100%\"\n        >\n          <Button size=\"md\" variant=\"outlined\" iconType=\"delete\" color=\"error\" onClick={() => deleteTx(index)}>\n            {''}\n          </Button>\n          <Text size=\"lg\">{tx.description}</Text>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nconst Dashboard = () => {\n  const { sdk, safe } = useSafeAppsSDK();\n  const services = useServices(safe.network);\n\n  const [addressOrAbi, setAddressOrAbi] = useState('');\n  const [loadAbiError, setLoadAbiError] = useState(false);\n  const [showExamples, setShowExamples] = useState(false);\n  const [toAddress, setToAddress] = useState('');\n  const [contract, setContract] = useState<ContractInterface | undefined>(undefined);\n  const [reviewing, setReviewing] = useState(false);\n  const [selectedMethodIndex, setSelectedMethodIndex] = useState(0);\n  const [inputCache, setInputCache] = useState<string[]>([]);\n  const [addTxError, setAddTxError] = useState<string | undefined>();\n  const [transactions, setTransactions] = useState<ProposedTransaction[]>([]);\n  const [value, setValue] = useState('');\n\n  const handleAddressOrABI = async (e: React.ChangeEvent<HTMLInputElement>): Promise<ContractInterface | void> => {\n    setContract(undefined);\n    setLoadAbiError(false);\n\n    const cleanInput = e.currentTarget?.value?.trim();\n    setAddressOrAbi(cleanInput);\n\n    if (!cleanInput.length || !services.web3 || !services.interfaceRepo) {\n      return;\n    }\n\n    if (toAddress.length === 0 && services.web3.utils.isAddress(cleanInput)) {\n      setToAddress(cleanInput);\n    }\n\n    try {\n      const contract = await services.interfaceRepo.loadAbi(cleanInput);\n      setContract(contract);\n    } catch (e) {\n      setLoadAbiError(true);\n      console.error(e);\n    }\n  };\n\n  const handleMethod = useCallback(\n    async (methodIndex: number) => {\n      if (!contract || contract.methods.length <= methodIndex) return;\n      setSelectedMethodIndex(methodIndex);\n    },\n    [contract],\n  );\n\n  const handleInput = useCallback(\n    async (inputIndex: number, input: string) => {\n      inputCache[inputIndex] = input;\n      setInputCache(inputCache.slice());\n    },\n    [inputCache],\n  );\n\n  const getContractMethod = () => contract?.methods[selectedMethodIndex];\n\n  const isValueInputVisible = () => {\n    const method = getContractMethod();\n    return method?.payable;\n  };\n\n  const addTransaction = useCallback(async () => {\n    let description = '';\n    let data = '';\n\n    const web3 = services.web3;\n\n    if (!web3) {\n      return;\n    }\n\n    if (contract && contract.methods.length > selectedMethodIndex) {\n      const method = contract.methods[selectedMethodIndex];\n      const cleanInputs = [];\n\n      description = method.name + ' (';\n      for (let i = 0; i < method.inputs.length; i++) {\n        const cleanValue = inputCache[i] || '';\n        cleanInputs[i] = cleanValue.charAt(0) === '[' ? JSON.parse(cleanValue.replace(/\"/g, '\"')) : cleanValue;\n        if (i > 0) {\n          description += ', ';\n        }\n        const input = method.inputs[i];\n        description += (input.name || input.type) + ': ' + cleanValue;\n      }\n      description += ')';\n\n      try {\n        data = web3.eth.abi.encodeFunctionCall(method as AbiItem, cleanInputs);\n      } catch (error) {\n        setAddTxError(error.message);\n        return;\n      }\n    }\n\n    try {\n      const cleanTo = web3.utils.toChecksumAddress(toAddress);\n      const cleanValue = value.length > 0 ? web3.utils.toWei(value) : 0;\n\n      if (data.length === 0) {\n        data = '0x';\n      }\n\n      if (description.length === 0) {\n        description = `Transfer ${cleanValue} ETH to ${cleanTo}`;\n      }\n\n      transactions.push({\n        description,\n        raw: { to: cleanTo, value: cleanValue, data },\n      });\n\n      setInputCache([]);\n      setTransactions(transactions);\n      setSelectedMethodIndex(0);\n      setValue('');\n    } catch (e) {\n      console.error(e);\n    }\n  }, [services, transactions, toAddress, value, contract, selectedMethodIndex, inputCache]);\n\n  const deleteTransaction = useCallback(\n    async (inputIndex: number) => {\n      const newTxs = transactions.slice();\n      newTxs.splice(inputIndex, 1);\n      setTransactions(newTxs);\n    },\n    [transactions],\n  );\n\n  const sendTransactions = useCallback(async () => {\n    if (!transactions.length) {\n      return;\n    }\n\n    try {\n      sdk.txs.send({ txs: transactions.map((d) => d.raw) });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [sdk, transactions]);\n\n  const handleSubmit = () => {\n    sendTransactions();\n    setTransactions([]);\n    setReviewing(false);\n  };\n\n  const handleDismiss = () => {\n    setReviewing(false);\n  };\n\n  const getInputInterface = (input: any) => {\n    // This code renders a helper for the input text.\n    // When the parameter is of Tuple type, it renders an array with the parameters types\n    // required to form the Tuple, if not, it renders the parameter type directly.\n    if (input.type.startsWith('tuple')) {\n      return `tuple(${input.components.map((c: any) => c.internalType).toString()})${\n        input.type.endsWith('[]') ? '[]' : ''\n      }`;\n    } else {\n      return input.type;\n    }\n  };\n\n  return (\n    <WidgetWrapper>\n      <StyledTitle size=\"sm\">Multisend transaction builder</StyledTitle>\n      <StyledText size=\"sm\">\n        This app allows you to build a custom multisend transaction.\n        <br />\n        Enter a Ethereum contract address or ABI to get started.\n        <br />\n        <Link\n          href=\"https://help.gnosis-safe.io/en/articles/4680071-create-a-batched-transaction-with-the-transaction-builder-safe-app\"\n          size=\"lg\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Learn how to use the transaction builder.\n        </Link>\n      </StyledText>\n\n      {/* TXs MODAL */}\n      {reviewing && transactions.length > 0 && (\n        <GenericModal\n          body={<ModalBody txs={transactions} deleteTx={deleteTransaction} />}\n          onClose={handleDismiss}\n          title=\"Send Transactions\"\n          footer={<ModalFooterConfirmation handleOk={handleSubmit} handleCancel={handleDismiss} />}\n        />\n      )}\n\n      {/* ABI Input */}\n      <TextField value={addressOrAbi} label=\"Enter Contract Address or ABI\" onChange={handleAddressOrABI} />\n      {loadAbiError && (\n        <Text color=\"error\" size=\"lg\">\n          There was a problem trying to load the ABI\n        </Text>\n      )}\n\n      {/* ABI Loaded */}\n      {contract && (\n        <>\n          <Title size=\"xs\">Transaction information</Title>\n\n          {!contract?.methods.length && <Text size=\"lg\">Contract ABI doesn't have any public methods.</Text>}\n\n          {/* Input To (destination) */}\n          {(isValueInputVisible() || contract.methods.length > 0) && (\n            <>\n              <TextField\n                style={{ marginTop: 10 }}\n                value={toAddress}\n                label=\"To Address\"\n                onChange={(e) => setToAddress(e.target.value)}\n              />\n              <br />\n            </>\n          )}\n\n          {/* Input ETH value */}\n          {isValueInputVisible() && (\n            <>\n              <TextField\n                style={{ marginTop: 10, marginBottom: 10 }}\n                value={value}\n                label=\"ETH\"\n                onChange={(e) => setValue(e.target.value)}\n              />\n\n              <br />\n            </>\n          )}\n\n          {\n            <>\n              {contract.methods.length > 0 && (\n                <>\n                  <br />\n                  <StyledSelect\n                    items={contract.methods.map((method, index) => ({\n                      id: index.toString(),\n                      label: method.name,\n                    }))}\n                    activeItemId={selectedMethodIndex.toString()}\n                    onItemClick={(id: string) => {\n                      setAddTxError(undefined);\n                      handleMethod(Number(id));\n                    }}\n                  />\n                  <StyledExamples>\n                    <ButtonLink color=\"primary\" onClick={() => setShowExamples((prev) => !prev)}>\n                      {showExamples ? 'Hide Examples' : 'Show Examples'}\n                    </ButtonLink>\n\n                    {showExamples && (\n                      <>\n                        <Text size=\"sm\" strong>\n                          string {'> '}\n                          <Text size=\"sm\" as=\"span\">\n                            some value\n                          </Text>\n                        </Text>\n                        <Text size=\"sm\" strong>\n                          uint256 {'> '}\n                          <Text size=\"sm\" as=\"span\">\n                            123\n                          </Text>\n                        </Text>\n                        <Text size=\"sm\" strong>\n                          address {'> '}\n                          <Text size=\"sm\" as=\"span\">\n                            0xDe75665F3BE46D696e5579628fA17b662e6fC04e\n                          </Text>\n                        </Text>\n                        <Text size=\"sm\" strong>\n                          array {'> '}\n                          <Text size=\"sm\" as=\"span\">\n                            [1,2,3]\n                          </Text>\n                        </Text>\n                        <Text size=\"sm\" strong>\n                          Tuple(uint256, string) {'> '}\n                          <Text size=\"sm\" as=\"span\">\n                            [1, \"someValue\"]\n                          </Text>\n                        </Text>\n                        <Text size=\"sm\" strong>\n                          Tuple(uint256, string)[] {'> '}\n                          <Text size=\"sm\" as=\"span\">\n                            [[1, \"someValue\"], [2, \"someOtherValue\"]]\n                          </Text>\n                        </Text>\n                      </>\n                    )}\n                  </StyledExamples>\n                </>\n              )}\n\n              {getContractMethod()?.inputs.map((input, index) => {\n                return (\n                  <div key={index}>\n                    <TextField\n                      style={{ marginTop: 10 }}\n                      value={inputCache[index] || ''}\n                      label={`${input.name || ''}(${getInputInterface(input)})`}\n                      onChange={(e) => {\n                        setAddTxError(undefined);\n                        handleInput(index, e.target.value);\n                      }}\n                    />\n                    <br />\n                  </div>\n                );\n              })}\n\n              {addTxError && (\n                <Text size=\"lg\" color=\"error\">\n                  {addTxError}\n                </Text>\n              )}\n            </>\n          }\n          <br />\n\n          {/* Actions */}\n          <ButtonContainer>\n            {isValueInputVisible() || contract.methods.length > 0 ? (\n              <Button size=\"md\" color=\"primary\" onClick={() => addTransaction()}>\n                Add transaction\n              </Button>\n            ) : (\n              <div></div>\n            )}\n\n            <Button\n              size=\"md\"\n              disabled={!transactions.length}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setReviewing(true)}\n            >\n              {`Send Transactions ${transactions.length ? `(${transactions.length})` : ''}`}\n            </Button>\n          </ButtonContainer>\n        </>\n      )}\n    </WidgetWrapper>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}