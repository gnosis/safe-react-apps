
if: (branch = master) OR (branch = development) OR (tag IS present) OR (branch = feature/xdai-deployment)
language: node_js
node_js: '12'
before_install:
  - yarn install --network-concurrency 1
  # Needed to deploy pull request and releases
  - pip install awscli --upgrade --user
cache:
  yarn: true
matrix:
  include:
  - env:
    # Use mainnet provider when building a tagged version
    - REACT_APP_WEB3_PROVIDER_URL=$REACT_APP_WEB3_PROVIDER_URL_MAINNET
    if: tag IS present
  - env:
    # Use rinkeby for development and staging builds
    - REACT_APP_WEB3_PROVIDER_URL=$REACT_APP_WEB3_PROVIDER_URL_RINKEBY
    if: NOT tag IS present
  - env:
    # Use xdai provider when building a tagged version
    - REACT_APP_WEB3_PROVIDER_URL=$REACT_APP_WEB3_PROVIDER_URL_XDAI
    - STAGING_BUCKET_NAME=${STAGING_XDAI_BUCKET_NAME}
    if: tag IS present OR (branch = feature/xdai-deployment)
before_script:
- yarn build
script:
  - echo "Skip tests" # no test cases for the project

deploy:
  # DEVELOPMENT env deployment
  - provider: s3
    bucket: $DEV_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    local_dir: build
    skip_cleanup: true
    region: $AWS_REGION
    on:
      branch: development

  # STAGING env deployment
  - provider: s3
    bucket: $STAGING_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    upload-dir: current
    local_dir: build
    region: $AWS_REGION
    on:
      # branch: master
      all_branches: true
      condition: $TRAVIS_BRANCH =~ ^(master|feature/xdai-deployment)$


  # Prepare production env deployment
  - provider: s3
    bucket: $STAGING_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    upload-dir: releases/$TRAVIS_TAG
    local_dir: build
    region: $AWS_REGION
    on:
      tags: true

  - provider: script
    script: bash travis/prepare_production_deployment.sh
    on:
      tags: true
